<package format="3">
  <name>planner_server</name>
  <version>0.6.7</version>
  <description>
    planner_server loads a 3D map (as Octree-based OctoMap) and distributes it to other nodes in a compact binary format. It also allows to incrementally build 3D OctoMaps, and provides map saving in the node octomap_saver.
  </description>
  <author>Armin Hornung</author>
  <maintainer email="opensource@wolfgangmerkt.com">Wolfgang Merkt</maintainer>
  <license>BSD</license>
  <url>http://www.ros.org/wiki/planeoct_server</url>
  <url type="bugtracker">https://github.com/OctoMap/octomap_mapping/issues</url>
  <url type="repository">https://github.com/OctoMap/octomap_mapping</url>



  <build_depend>srvbg</build_depend>
  <build_export_depend>srvbg</build_export_depend>
  <exec_depend>srvbg</exec_depend>
  <buildtool_depend>catkin</buildtool_depend>
  <build_depend>lkh</build_depend>
  <build_export_depend>lkh</build_export_depend>
  <exec_depend>lkh</exec_depend>
  <build_depend>hybrida</build_depend>
  <build_export_depend>hybrida</build_export_depend>
  <exec_depend>hybrida</exec_depend>
  <build_depend>roscpp</build_depend>
  <build_depend>visualization_msgs</build_depend>
  <build_depend>sensor_msgs</build_depend>
  <build_depend>nav_msgs</build_depend>
  <build_depend>std_msgs</build_depend>
  <build_depend>std_srvs</build_depend>
  <build_depend>dynamic_reconfigure</build_depend>
  <build_depend>nodelet</build_depend>
  <build_depend>octomap</build_depend>
  <build_depend>octomap_msgs</build_depend>
  <build_depend>octomap_ros</build_depend>


  <exec_depend>roscpp</exec_depend>
  <exec_depend>visualization_msgs</exec_depend>
  <exec_depend>sensor_msgs</exec_depend>
  <exec_depend>nav_msgs</exec_depend>
  <exec_depend>std_msgs</exec_depend>
  <exec_depend>std_srvs</exec_depend>
  <exec_depend>dynamic_reconfigure</exec_depend>
  <exec_depend>nodelet</exec_depend>
  <exec_depend>octomap</exec_depend>
  <exec_depend>octomap_msgs</exec_depend>
  <exec_depend>octomap_ros</exec_depend>  


  <!-- <build_depend>nlopt</build_depend>
  <exec_depend>nlopt</exec_depend>  
  <build_export_depend>nlopt</build_export_depend> -->

  <build_depend>bspline</build_depend>
  <exec_depend>bspline</exec_depend>  
  <build_export_depend>bspline</build_export_depend>

  <build_depend>cv_bridge</build_depend>
  <exec_depend>cv_bridge</exec_depend>  
  <build_export_depend>cv_bridge</build_export_depend>

  <export> </export>
</package>
